///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ExcelTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TextInsertion recording.
    /// </summary>
    [TestModule("93f7ecb6-f165-4c69-83d7-126a56f41043", ModuleType.Recording, 1)]
    public partial class TextInsertion : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ExcelTest1Repository repository.
        /// </summary>
        public static ExcelTest1Repository repo = ExcelTest1Repository.Instance;

        static TextInsertion instance = new TextInsertion();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TextInsertion()
        {
            CellValue = "5553535";
            HanNavel = "";
            ElseVariable = "AB/CD";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TextInsertion Instance
        {
            get { return instance; }
        }

#region Variables

        string _CellValue;

        /// <summary>
        /// Gets or sets the value of variable CellValue.
        /// </summary>
        [TestVariable("bb4cda8d-4cc2-42ee-93f7-71c265b02b10")]
        public string CellValue
        {
            get { return _CellValue; }
            set { _CellValue = value; }
        }

        string _HanNavel;

        /// <summary>
        /// Gets or sets the value of variable HanNavel.
        /// </summary>
        [TestVariable("9db1e775-999f-4a74-8f39-0a6560523a50")]
        public string HanNavel
        {
            get { return _HanNavel; }
            set { _HanNavel = value; }
        }

        string _ElseVariable;

        /// <summary>
        /// Gets or sets the value of variable ElseVariable.
        /// </summary>
        [TestVariable("d74770fe-a8da-459b-9904-a2f923baaa23")]
        public string ElseVariable
        {
            get { return _ElseVariable; }
            set { _ElseVariable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CellValue' with focus on 'Book16Excel.CellH8'.", repo.Book16Excel.CellH8Info, new RecordItemIndex(0));
            repo.Book16Excel.CellH8.PressKeys(CellValue);
            Delay.Milliseconds(0);
            
            CellParameterChange();
            Delay.Milliseconds(0);
            
            CellParametersSet();
            Delay.Milliseconds(0);
            
            ValidateCellContent();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
